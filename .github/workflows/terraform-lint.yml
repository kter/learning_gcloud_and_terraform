name: Terraform Lint

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'env/**/*.tf'
      - 'modules/**/*.tf'
      - '.github/workflows/terraform-lint.yml'

jobs:
  terraform-lint:
    name: Terraform Format and Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init (modules)
        run: |
          for dir in modules/*/; do
            echo "Initializing $dir"
            cd "$dir"
            terraform init -backend=false
            cd - > /dev/null
          done

      - name: Terraform Validate (modules)
        run: |
          for dir in modules/*/; do
            echo "Validating $dir"
            cd "$dir"
            terraform validate
            cd - > /dev/null
          done

      - name: Comment Format Check Result
        if: steps.fmt.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '⚠️ Terraform format check failed. Please run `terraform fmt -recursive` to fix formatting issues.'
            })

      - name: Fail if format check failed
        if: steps.fmt.outcome == 'failure'
        run: exit 1

  tflint:
    name: TFLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Initialize TFLint
        run: tflint --init

      - name: Run TFLint on modules
        run: |
          for dir in modules/*/; do
            echo "Linting $dir"
            cd "$dir"
            tflint --format compact
            cd - > /dev/null
          done

      - name: Run TFLint on env
        run: |
          for dir in env/dev/*/; do
            echo "Linting $dir"
            cd "$dir"
            tflint --format compact
            cd - > /dev/null
          done
